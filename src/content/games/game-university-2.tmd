<%
import json
from datetime import date
with open('game-university.json') as fid:
    game_data = json.load(fid)
NUM_TEAMS = game_data['NUM_TEAMS']
NUM_MEMBERS = game_data['NUM_MEMBERS']
points_limit = 100
setInfo(
        assessment_type='game',
        max_segments=3,
        points_limit=points_limit,
        points_total=NUM_TEAMS*NUM_MEMBERS*points_limit,
       )
dbs=[f'crime{team_number%NUM_TEAMS}{team_member_number%NUM_MEMBERS}.sqlite']
if not defined('seeAllQuestions'):
   seeAllQuestions = section == '003' and defined('viewAnswers') and viewAnswers
end

%>

<img src="{{LOGO}}" style="float:right; vertical-align:0px"/>

# 2 University game

---

## {{!linkable_header('SQL Tutorial Cheat Sheet')}}

Following are three SQL tutorial cheat sheets available from http://www.sqltutorial.org

<img src="{{static('images/SQLTutorial.1.jpeg')}}" style="width:85%" alt="First of three SQL Tutorial cheat sheets"/>
<img src="{{static('images/SQLTutorial.2.jpeg')}}" style="width:85%" alt="Second of three SQL Tutorial cheat sheets"/>
<img src="{{static('images/SQLTutorial.3.jpeg')}}" style="width:85%" alt="Third of three SQL Tutorial cheat sheets"/>

---

## {{!linkable_header('Schema')}}

Here is the tables you'll find for the database used in the game.

<font color="red">NOTE</font> The addition of relations id_card, transcription, conversation_participants, and transcription from the schema on page 47 of the textbook.

<figure>
  <img src="{{static('images/game-university-schema.png')}}"
     style="width:75%; ">
  <figcaption>Schema diagram for the crime database game</figcaption>
</figure>


<pre>
   <code class="sql">
% for line in game_data['schema'].split('\n'):
   {{!line}}   
% end
   </code>
</pre> 

---

## {{!linkable_header('Game format')}}


The game is multiple submissions.
You answer one part of the game, submit it, and you are presented with the next stage of the game.
Once you submit a part of the game, you <font color='red'>cannot</font> go back.

In the following scratch space.
You can use it to test out queries.
There are no points for the following SQL query.
It is a scratch pad.
{{!sql(''' select 1 ''', name='_scratch_sql_queries_1', dbs=dbs)}}

---

## {{!linkable_header('Questions')}}

% for team in range(NUM_TEAMS):
   % for member in range(NUM_MEMBERS):

     % if seeAllQuestions or ((team_member_number % NUM_MEMBERS) == member and (team_number % NUM_TEAMS) == team):
       % gd = game_data[f'game{team}{member}']
    <%
    conversation_date = gd['course']['conversation_date']
    conversation_date = date(int(conversation_date[0:4]),
                             int(conversation_date[5:7]), 
                            int(conversation_date[8:10]))
    cheating_date = gd['course']['cheating_date']
    cheating_date = date(int(cheating_date[0:4]),
                         int(cheating_date[5:7]),
                         int(cheating_date[8:10]))
    %>

You are {{gd['student_advocate']['name']}}, id={{gd['student_advocate']['id']}}, and
{{gd['accused_student']['name']}}, id={{gd['accused_student']['id']}}, 
in class {{gd['course']['course_id']}},
section {{gd['course']['sec_id']}}, semester {{gd['course']['semester']}} year, {{gd['course']['year']}},
taught by professor {{gd['course']['teacher_name']}}, id={{gd['course']['teacher_id']}}.

With your COMP 421 SQL skills you've found the transcription text from the conversation between
professor {{gd['course']['teacher_last_name']}} and {{gd['accused_student']['first_name']}} on
{{conversation_date.strftime('%b %d')}} about the exam on {{cheating_date.strftime('%b %d')}}.
The text is:

```
{{"\n".join(gd['course']['conversation_text'])}}
```

---

**Which.Students.Match.Eye.Hair.Color.{{team}}.{{member}}:** Let's see if there are other university students who match the same eye color,
hair color and gender as {{gd['accused_student']['first_name']}}.  
List the names of all students who have eye color of {{gd['accused_student']['eye_color']}},
hair color of {{gd['accused_student']['hair_color']}}, and
are a {{'man' if gd['accused_student']['gender'] == 'male' else 'woman'}}.  
% answer = f'''
-- expired = false is required as there is an expired id present
SELECT I.name
  FROM ID_card I, Student S
 WHERE I.ID = S.ID AND
       I.expired = false AND
       I.hair_color = '{gd['accused_student']['hair_color']}' AND
       I.gender = '{gd['accused_student']['gender']}' AND
       I.eye_color = '{gd['accused_student']['eye_color']}'
'''
{{!sql(answer, dbs=[gd['database']], points=25, name=f' Which.Students.Match.Eye.Hair.Color.{team}.{member}', sort=True)}}
% include('viewAnswer')

---

That wasn't very helpful.
Let's look at just the students in the class.

**Who.Is.In.Class.{{team}}.{{member}}:** Let's see if you can list the names of all the students in {{gd['course']['course_id']}} with you and {{gd['accused_student']['first_name']}}.  
**Note:** This is deceptively hard.  There are lots of predicates in the WHERE clause!  
% answer = f'''
-- expired = false is required as there is an expired id present
SELECT I.name
  FROM ID_card I, Student S, Takes T, Course C, Section
 WHERE T.ID = S.ID AND
       S.ID = I.ID AND
       T.course_id = C.course_id AND
       I.expired = false AND
       Section.course_id = C.course_id AND
       Section.course_id = '{gd['course']['course_id']}' AND
       Section.course_id = T.course_id AND
       Section.sec_id = '{gd['course']['sec_id']}' AND
       Section.sec_id = T.sec_id AND
       Section.semester = '{gd['course']['semester']}' AND
       Section.semester = T.semester AND
       Section.year = '{gd['course']['year']}' AND
       Section.year = T.year
'''
{{!sql(answer, dbs=[gd['database']], points=50, name=f' Who.Is.In.Class.{team}.{member}', sort=True)}}
% include('viewAnswer')

--- 

Let's combine the last two queries.

**Who.Is.In.Class.Has.Same.Eye.Hair.Color.{{team}}.{{member}}:** Let's see if you can list the names of all the students in {{gd['course']['course_id']}} with you and {{gd['accused_student']['first_name']}}.  
**Note:** This is deceptively hard.  There are lots of predicates in the WHERE clause!  
% answer = f'''
-- expired = false is required as there is an expired id present
SELECT I.name
  FROM ID_card I, Student S, Takes T, Course C, Section
 WHERE T.ID = S.ID AND
       S.ID = I.ID AND
       I.expired=false AND
       I.hair_color = '{gd['accused_student']['hair_color']}' AND
       I.gender = '{gd['accused_student']['gender']}' AND
       I.eye_color = '{gd['accused_student']['eye_color']}' AND
       T.course_id = C.course_id AND
       Section.course_id = C.course_id AND
       Section.course_id = '{gd['course']['course_id']}' AND
       Section.course_id = T.course_id AND
       Section.sec_id = '{gd['course']['sec_id']}' AND
       Section.sec_id = T.sec_id AND
       Section.semester = '{gd['course']['semester']}' AND
       Section.semester = T.semester AND
       Section.year = '{gd['course']['year']}' AND
       Section.year = T.year
'''
{{!sql(answer, dbs=[gd['database']], points=25, name=f' Who.Is.In.Class.Same.Eye.Hair.{team}.{member}', sort=True)}}
% include('viewAnswer')

--- 


   %end
%end

% if 'submit' in pages:
% include('games-pledge.md', segment='1')
% include('submit.md')
%end
