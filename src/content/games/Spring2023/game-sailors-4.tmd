<%
import json
from datetime import datetime, date
setInfo(
        needsSubmitCode=True,
        assessment_type='game',
        due='2023-02-16 10:45:00',
        exceptions=dict(_003=dict(needsSubmitCode=False)),
        pages=['questions', 'submit'],
        max_segments=3,
        maxpenalty=1.00, penalty=.20,
       )
dbs=['game-sailors-1.sqlite', 'game-sailors-2.sqlite']
with open(f'content/games/databases/{dbs[1].replace(".sqlite", ".json")}', encoding='utf-8') as fid:
   schema = json.load(fid)
%>

<img src="{{LOGO}}" style="float:right; vertical-align:0px"/>

# 4 Sailor Game example

---

## {{!linkable_header('SQL Tutorial Cheat Sheet')}}

Following are three SQL tutorial cheat sheets available from http://www.sqltutorial.org

<img src="{{static('images/SQLTutorial.1.jpeg')}}" style="width:85%" alt="First of three SQL Tutorial cheat sheets"/>
<img src="{{static('images/SQLTutorial.2.jpeg')}}" style="width:85%" alt="Second of three SQL Tutorial cheat sheets"/>
<img src="{{static('images/SQLTutorial.3.jpeg')}}" style="width:85%" alt="Third of three SQL Tutorial cheat sheets"/>

---

## {{!linkable_header('Sailor Game Database Schema')}}

Here is the tables you'll find for the database used in the game.
 
<pre>
   <code class="sql">
% for line in schema.split('\n'):
   {{!line}}   
% end
   </code>
</pre> 

% if 'questions' in pages:

---

## {{!linkable_header('Game format')}}


The game is multiple submissions.
You answer one part of the game, submit it, and you are presented with the next stage of the game.
Once you submit a part of the game, you <font color='red'>cannot</font> go back.

In the following scratch space.
You can use it to test out queries.
There are no points for the following SQL query.
It is a scratch pad.
{{!sql(''' select 1 ''', name='_scratch_sql_queries_1', dbs=dbs)}}

---

% if 'questions' in pages:
## {{!linkable_header('Questions')}}

From the previous submission, the sailors alphabetically were:
 
 - Albert
 - Andy
 - Art
 - Bart
 - Bob
 - Brutus
 - Dustin 
 - Frodo
 - Homer
 - Horatio
 - Lisa
 - Lubber
 - Majikes _only in the second database_
 - Rusty
 - Zorba
 
There are only three colors to choose from: blue, green, and red.
There are eight blue boats, six green boats, and five red boats.

The database had 4 reserves of boat id 111.

---


**Boat.Most.Reserved:** Write a query to tell the boat name(s) that was most reserved and the number of times it was reserved.  
% answer = '''
-- T1 is a table of boat names and the number of reservations
WITH T1 AS (SELECT B.bname, count(*) as rcount
              FROM Boats B, Reserves R
             WHERE R.bid=B.bid
            GROUP by B.Bid)

-- Find the boat name with the largest number of reservations
SELECT T1.bname, T1.rcount
  FROM T1
 WHERE T1.rcount = (SELECT MAX(T2.rcount)
                      FROM T1 as T2)
'''
{{!sql(answer, dbs=dbs, points=50, sort=True, name='Boat.Most.Reserved')}}
% include('viewAnswer')


**Sailor.With.Most.Reserves:** Which sailor id reserved the most boats and how many boats did they reserve?  
**NOTE:** Again, you have to do this with one query and not hardcoding the sailor.  
% answer = '''
WITH C AS (SELECT sid, COUNT(*) as count
             FROM Reserves
             GROUP BY sid)

SELECT sid, count
  FROM C
 WHERE c.count = (SELECT MAX(count) from C)
 '''
{{!sql(answer, dbs=dbs, points=50, name='Sailor.With.Most.Reserves', sort=True)}}
% include('viewAnswer')

--- 

%end

% if 'submit' in pages:
% include('games-pledge.md', segment='1')
% include('submit.md')
%end
