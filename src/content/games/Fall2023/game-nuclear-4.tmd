<%
import json
from datetime import datetime
with open('game-nuclear.json') as fid:
    game_data = json.load(fid)
NUM_TEAMS = game_data['NUM_TEAMS']
NUM_MEMBERS = game_data['NUM_MEMBERS']
points_limit = 100
setInfo(
        assessment_type='game',
        points_limit=points_limit,
        points_total=NUM_TEAMS*NUM_MEMBERS*points_limit,
       )
dbs=[f'game-nuclear{team_number%NUM_TEAMS}{team_member_number%NUM_MEMBERS}.sqlite']

from collections import namedtuple
PAGE_INFO = namedtuple('PAGE_INFO', '''bytes rec_per_page pages keys_per_page fanout''')
page_infos = [dict(persons=PAGE_INFO(bytes=256, rec_per_page=32, pages=300,
                                     keys_per_page=150, fanout=75),
                   parts=PAGE_INFO(bytes=126, rec_per_page=64, pages=100,
                                   keys_per_page=125, fanout=85),
                   buffers=102),
              dict(persons=PAGE_INFO(bytes=256, rec_per_page=32, pages=100,
                                     keys_per_page=150, fanout=100),
                   parts=PAGE_INFO(bytes=100, rec_per_page=64, pages=150,
                                   keys_per_page=125, fanout=85),
                   buffers=102),
              dict(persons=PAGE_INFO(bytes=200, rec_per_page=32, pages=100,
                                     keys_per_page=150, fanout=125),
                   parts=PAGE_INFO(bytes=100, rec_per_page=64, pages=100,
                                   keys_per_page=125, fanout=85),
                   buffers=102),
              dict(persons=PAGE_INFO(bytes=225, rec_per_page=32, pages=200,
                                     keys_per_page=150, fanout=75),
                   parts=PAGE_INFO(bytes=125, rec_per_page=64, pages=100,
                                   keys_per_page=125, fanout=85),
                   buffers=102),
              ]
assert len(page_infos) == NUM_MEMBERS

from math import ceil, log
%>

<img src="{{LOGO}}" style="float:right; vertical-align:0px"/>

# 4 Nuclear Database Escape Room

<div>
  <center><img src="{{static('images/NuclearPlantRooms.jpg')}}" style="width: 50%; transform:rotate(90deg);"/></center>
  <div style="text-align: center" >Emirates Nuclear Energy Corporation, United Arab Emerates</div>
</div>

---

## {{!linkable_header('SQL Tutorial Cheat Sheet')}}

Following are three SQL tutorial cheat sheets available from http://www.sqltutorial.org

<img src="{{static('images/SQLTutorial.1.jpeg')}}" style="width:85%" alt="First of three SQL Tutorial cheat sheets"/>
<img src="{{static('images/SQLTutorial.2.jpeg')}}" style="width:85%" alt="Second of three SQL Tutorial cheat sheets"/>
<img src="{{static('images/SQLTutorial.3.jpeg')}}" style="width:85%" alt="Third of three SQL Tutorial cheat sheets"/>

---

## {{!linkable_header('Nuclear Game Database Schema')}}

Here is the tables you'll find for the database used in the games.
It is the same schema used for homework 2.
 
<div class="row">
  <pre>
   <code class="sql">
% for line in game_data['schema'].split('\n'):
   {{!line}}   
% end
   </code>
  </pre> 
</div>

<figure>
   <img src="{{static('images/Nuclear.schema.diagram.png')}}" style="width: 75%">
   <figcaption>Schema diagram for a nuclear power plant database</figcaption>
</figure>

---

## {{!linkable_header('Game format')}}


The game is multiple worksheets.
You answer one worksheet of the game, submit it, and you are presented with the next stage of the game.
Once you submit a worksheet of the game, you <font color='red'>cannot</font> go back.

In the following scratch space.
You can use it to test out queries.
There are no points for the following SQL query.
It is a scratch pad.
{{!sql(''' select 1 ''', name='_scratch_sql_queries_1', dbs=dbs)}}

---

## {{!linkable_header('Questions')}}

% for team in range(NUM_TEAMS):
   % for member in range(NUM_MEMBERS):

     % if section == '003' or ((team_member_number % NUM_MEMBERS) == member and (team_number % NUM_TEAMS) == team):
       % gd = game_data[f'{team}{member}']
       % incident_date_str = gd['report_info']['incident_date_str']
       % incident_date = gd['report_info']['incident_date']
       % company_name = gd['company_info']['name']
       % contact_name = gd['contact_info']['name']
       % saboteur_info = gd['saboteur_info']
       % saboteur_gender = saboteur_info['gender']
       % dbs = [gd['database_fn']]


Given the information so far, you called {{gd['contact_info']['phone_number']}}.
The contact's name is {{contact_name}}.

You've also discovered that one company, {{company_name}}, was the manufacturer / installer
of _all_ the parts that were repaired at the SQL City Nuclear Power Company.
And amazingly, one employee at {{company_name}}, {{saboteur_info['name']}}, opened hundreds more doors than anyone else.

You have another call with {{contact_name.split()[0]}} that goes something like this:

> {{saboteur_info['name'].split()[0]}} is ran down the hall.
> We gotta find {{'him' if saboteur_gender == 'male' else 'her'}} before time runs out.
>
> Can you find the last room {{'he' if saboteur_gender == 'male' else 'she'}} went into?
> Then I'll know what room to go into!!!!
>


---

**Last.Room.{{team}}.{{member}}:** Find the name of the last room that {{saboteur_info['name']}} went into.
% answer = f'''
SELECT R.name
  FROM Rooms R, Badge_Readers BR
 WHERE R.room_id=BR.to_room AND
       BR.badge_reader_id = (SELECT badge_reader_id
                               FROM doors_opened as DO, Badges B, Persons P
                              WHERE P.person_id = B.person_id AND
                                    DO.badge_id = B.badge_id AND
                                    P.name='{saboteur_info["name"]}'
                              ORDER BY open_time DESC limit 1)
'''
{{!sql(answer, dbs=dbs, points=25, name=f' Last.Room.{team}.{member}')}}
% include('viewAnswer')

---

After phoning this information to {{contact_name.split()[0]}}
you get the following text:

> Well, I found {{'him' if saboteur_info['gender'] == 'male' else 'her' }}
> right next to the bomb {{'he' if saboteur_info['gender'] == 'male' else 'she' }} was trying to protect.
> I guess I'm a better shot than I thought.
> 
> But {{'he' if saboteur_info['gender'] == 'male' else 'she' }} did go on 
> with an evil villain monologue before leaving us.
> I couldn't understand most of it, but the combination to unlock the bomb 
> is a number {{'he' if saboteur_info['gender'] == 'male' else 'she' }} said I'd never figure out.
>
> But you can!
>
> Let's try a few numbers.
> What is the house number where  {{'he' if saboteur_info['gender'] == 'male' else 'she' }} lives?

---

**House.Number.{{team}}.{{member}}:** What is the house number for {{saboteur_info['name']}}?
% answer = f'''
SELECT address_number
  FROM Persons
 WHERE name ='{saboteur_info['name']}'
'''
{{!sql(answer, dbs=dbs, sort=True, points=25, name=f' House.Number.{team}.{member}')}}
% include('viewAnswer')

---

{{contact_name}} gets back to you:

> Well, that didn't work.
> {{'He' if saboteur_info['gender'] == 'male' else 'She' }} spent a lot of time at
> his company setting all this up.
>
> What's the number for the address for {{saboteur_info['name']}}?

**Company.Address.Number.{{team}}.{{member}}:** What is the house number for the company where  {{saboteur_info['name']}} worked?

% answer = f'''
SELECT C.address_number
  FROM Persons P, Companies C
 WHERE P.name ='{saboteur_info['name']}' and
       P.company_id = C.company_id
'''
{{!sql(answer, dbs=dbs, sort=True, points=25, name=f' Company.Address.Number.{team}.{member}')}}
% include('viewAnswer')

---

{{contact_name}} gets back to you:

> Well, that didn't work.
> {{'He' if saboteur_info['gender'] == 'male' else 'She' }} made some comment about his `ride`.
>
> What's the license plate number for the {{saboteur_info['name']}}'s vehicle?

**Car.license.Number.{{team}}.{{member}}:** What is the license plate number for the vehicle {{saboteur_info['name']}} drives?

% answer = f'''
SELECT D.plate_number
  FROM Persons P, Drivers_licenses D
 WHERE P.name ='{saboteur_info['name']}' and
       P.person_id = D.person_id
'''
{{!sql(answer, dbs=dbs, sort=True, points=25, name=f' Car.license.Number.{team}.{member}')}}
% include('viewAnswer')

---

{{contact_name}} gets back to you:

> Bomb disarmed!


You faint but not before submitting your last game worksheet.

---

   %end
 %end
%end


% include('games-submit.md')
