<%
import json
from datetime import date
with open('game-university.json') as fid:
    game_data = json.load(fid)
NUM_TEAMS = game_data['NUM_TEAMS']
NUM_MEMBERS = game_data['NUM_MEMBERS']
points_limit = 100
setInfo(
        assessment_type='game',
        max_segments=3,
        points_limit=points_limit,
        points_total=NUM_TEAMS*NUM_MEMBERS*points_limit,
       )
dbs=[f'crime{team_number%NUM_TEAMS}{team_member_number%NUM_MEMBERS}.sqlite']
if not defined('seeAllQuestions'):
   seeAllQuestions = section == '003' and defined('viewAnswers') and viewAnswers
end

%>

<img src="{{LOGO}}" style="float:right; vertical-align:0px"/>

# 1 University game

---

## {{!linkable_header('SQL Tutorial Cheat Sheet')}}

Following are three SQL tutorial cheat sheets available from http://www.sqltutorial.org

<img src="{{static('images/SQLTutorial.1.jpeg')}}" style="width:85%" alt="First of three SQL Tutorial cheat sheets"/>
<img src="{{static('images/SQLTutorial.2.jpeg')}}" style="width:85%" alt="Second of three SQL Tutorial cheat sheets"/>
<img src="{{static('images/SQLTutorial.3.jpeg')}}" style="width:85%" alt="Third of three SQL Tutorial cheat sheets"/>

---

## {{!linkable_header('Schema')}}

Here is the tables you'll find for the database used in the game.

<font color="red">NOTE</font> The addition of relations id_card, transcription, conversation_participants, and transcription from the schema on page 47 of the textbook.

<figure>
  <img src="{{static('images/game-university-schema.png')}}"
     style="width:75%; ">
  <figcaption>Schema diagram for the crime database game</figcaption>
</figure>


<pre>
   <code class="sql">
% for line in game_data['schema'].split('\n'):
   {{!line}}   
% end
   </code>
</pre> 

---

## {{!linkable_header('Game format')}}


The game is multiple submissions.
You answer one part of the game, submit it, and you are presented with the next stage of the game.
Once you submit a part of the game, you <font color='red'>cannot</font> go back.

In the following scratch space.
You can use it to test out queries.
There are no points for the following SQL query.
It is a scratch pad.
{{!sql(''' select 1 ''', name='_scratch_sql_queries_1', dbs=dbs)}}

---

## {{!linkable_header('Questions')}}

% for team in range(NUM_TEAMS):
   % for member in range(NUM_MEMBERS):

     % if seeAllQuestions or ((team_member_number % NUM_MEMBERS) == member and (team_number % NUM_TEAMS) == team):
       % gd = game_data[f'game{team}{member}']
    <%
    conversation_date = gd['course']['conversation_date']
    conversation_date = date(int(conversation_date[0:4]),
                             int(conversation_date[5:7]), 
                            int(conversation_date[8:10]))
    cheating_date = gd['course']['cheating_date']
    cheating_date = date(int(cheating_date[0:4]),
                         int(cheating_date[5:7]),
                         int(cheating_date[8:10]))
    %>

You are {{gd['student_advocate']['name']}} in class {{gd['course']['course_id']}},
section {{gd['course']['sec_id']}}, semester {{gd['course']['semester']}}, year {{gd['course']['year']}},
taught by professor {{gd['course']['teacher_name']}}.
You notice that student {{gd['accused_student']['name']}} is very upset.

On {{conversation_date.strftime('%b %d')}}
{{gd['accused_student']['pronoun'].capitalize()}} tells you that 
professor {{gd['course']['teacher_last_name']}} accused
{{gd['accused_student']['possessive_pronoun']}} of cheating
on the exam given on {{cheating_date.strftime('%b %d')}}.
Professor {{gd['course']['teacher_last_name']}} supposedly has a full proof system
that video monitors all students in the classroom.
Professor {{gd['course']['teacher_last_name']}} told {{gd['accused_student']['first_name']}} that
the system uses state-of-the-art large language models, LLMs, even stronger than ChatGPT.


You know {{gd['accused_student']['first_name']}} and you know
{{gd['accused_student']['pronoun']}} wouldn't cheat.
You're on a mission to prove it!!!

You have taken COMP 421, Databases and Files, so you are a database expert.
For some unknown reason, you have R/O access to the university database and you're not afraid to use it.

**Who.Are.You.{{team}}.{{member}}:** Find your full name, student id, and social security number.  
% answer = f'''
-- More than likely, expired=false is not required
-- It should always be used
SELECT name, ID, ssn
  FROM ID_card
 WHERE name = '{gd['student_advocate']['name']}' AND
       expired=false'''
{{!sql(answer, dbs=[gd['database']], points=25, name=f' Who.Are.You.{team}.{member}', sort=True)}}
% include('viewAnswer')

--- 

**Who.Is.{{gd['accused_student']['pronoun'].capitalize()}}.{{team}}.{{member}}:** Find the full name, student id, social security number, hair color, eye color, and gender of the upset student, {{gd['accused_student']['name']}}.  
% answer = f'''
-- More than likely, expired=false is not required
-- It should always be used
SELECT name, ID, ssn, hair_color, eye_color, gender
  FROM ID_card
 WHERE name = '{gd['accused_student']['name']}'  AND
       expired=false'''
{{!sql(answer, dbs=[gd['database']], points=25, name=f' Who.Is.{gd["accused_student"]["pronoun"].capitalize()}.{team}.{member}', sort=True)}}
% include('viewAnswer')

--- 

**Who.Is.Professor.{{team}}.{{member}}:** Find the full name, professor id, and social security number of the professor, {{gd['course']['teacher_name']}}.  
% answer = f'''
-- Expired=false is required
SELECT name, ID, ssn
  FROM ID_card
 WHERE name = '{gd['course']['teacher_name']}'  AND
       expired=False'''
{{!sql(answer, dbs=[gd['database']], points=25, name=f' Who.Is.Professor.{team}.{member}', sort=True)}}
% include('viewAnswer')

--- 

**Get.Video.Transcription.{{team}}.{{member}}:** Get the video conversation(s) text
from transcriptions on the day of the accusation, {{conversation_date.strftime('%b %d')}},
with both Professor {{gd['course']['teacher_name']}} and your friend {{gd['accused_student']['name']}}.
% answer = f'''
SELECT T.conversation
  FROM Transcription T, Conversation_participants C1, Conversation_participants C2
 WHERE T.transcription_id=C1.transcription_id  AND
       T.transcription_id=C2.transcription_id AND
       C1.id='{gd['course']['teacher_id']}' AND
       C2.id='{gd['accused_student']['id']}' AND
       what_date='{gd['course']['conversation_date']}' '''
{{!sql(answer, dbs=[gd['database']], points=25, name=f' Get.Video.Transcription.{team}.{member}', sort=True)}}
% include('viewAnswer')

--- 


   %end
%end

% if 'submit' in pages:
% include('games-pledge.md', segment='1')
% include('submit.md')
%end
