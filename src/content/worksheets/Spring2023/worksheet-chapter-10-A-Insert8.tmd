<%
setInfo(
      due="2021-10-19 15:15:00",
      needsSubmitCode=True,
      assessment_type='worksheet',
			pages=['questions', 'submit'],
      penalty=1,
      maxpenalty=1,
      exceptions=dict(_003=dict(needsSubmitCode=False),
                      harley87=dict(needsSubmitCode=False, due='2021-10-26 15:15:00')),
)
dbs = ['states-A.sqlite']
%>

# Chapter 10 B+ Tree insert 8*

<img src="{{static('images/COMP421Logo.png')}}" style="float:right; vertical-align:0px; width=50%"/>

% include('worksheet-dont-panic.md')
% include('green-highlight.md')

## {{!linkable_header('Questions')}}

% if 'questions' in pages:

---

For these sets of questions assume the following B+ Tree:  

 1. Even though record keys are defined with an asterisk notation, the select pull downs will **not** include the asterisk!  
 2. If leaf or index entries are empty, leave the selection field blank  
 3. You must use the algorithm discussed in class. For example, do not do redistribution of nodes.

<img src="{{static('images/worksheet-chapter-10-A-Insert8.png')}}" style="float:none; width:50%"/>

---

**Before.8**: Before inserting `8*` into the B+ Tree, what must first happen?  
% answer = 'C. Determine the leaf node that should contain 8*'
% choices = ['A. Nothing, just pick a leaf node and insert 8*', 'B. Find the least empty leaf node to insert 8*', answer, 'D. All of these', 'E. None of these']
{{!select(answer, choices, points=20, name='Before.8')}}
%include('viewAnswer')

---

**Root.8**: Which pointer in the root node of the B+ tree would be traversed to find the leaf node containing `8*'?  
**Note:** Pointer go from left to right are $p_0$, $\dots$, $p_4$  
% answer = 'p0'
% choices = [f'p{i}' for i in range(5) ]
{{!select(answer, choices, points=20, name='Root.8')}}
%include('viewAnswer')

---

**Where.8**: If `8*` were already in the B+ tree, where would it be?  
% answer = 'L1'
% choices = ['Root', 'L1', 'L2', 'L3', 'L4', 'L5' ]
{{!select(answer, choices, points=20, name='Where.8')}}
%include('viewAnswer')

---

**Can.8**: Can `8*` be inserted into the leaf node?  
% answer = 'No'
% choices = [answer, 'Sure', 'Why not?', 'None of them']
{{!select(answer, choices, points=20, name='Can.8')}}
%include('viewAnswer')

---

**Leaf.Node**: Since `8*` cannot fit, enter the records in the split and the new leaf nodes assuming no redistrubition of records between leaf nodes.  
**Note:**: Even though records are defined with an asterisk notation, the select pull down will not include the asterick!  
% answer = ['2', '3', '', '', '5', '7', '8', '']
% symbols = [f'{x}' for x in range(31)] + [""]
{{!table(inputs=1, headings='Leaf Node and position, Value', table=f'''
L1 entry 1,{answer[0]}
L1 entry 2,{answer[1]}
L1 entry 3,{answer[2]}
L1 entry 4,{answer[3]}
New Leaf L6 entry 1,{answer[4]}
New Leaf L6 entry 2,{answer[5]}
New Leaf L6 entry 3,{answer[6]}
New Leaf L6 entry 4,{answer[7]}''', symbols=symbols, name='Leaf.Node', points=40)}}
%include('viewAnswer')

---

**Index.Nodes**: What is the value of the index nodes?  
**Note:** There may be extra index nodes below.
If there are, leave their entries blank.  
**Note:** Index nodes go from top-to-bottom and left-to-right.
With the first index, root.  The next index I0. etc.
<%
answer = [['17','', '', ''],
          ['5', '13', '', ''],
          ['24', '30', '', ''],
          ['', '', '', '']]
symbols = [f'{x}' for x in range(31)] + [""]
%>
{{!table(inputs=1, headings='Index Node and position, Value', table=f'''
Root value 1,{answer[0][0]}
Root value 2,{answer[0][1]}
Root value 3,{answer[0][2]}
Root value 4,{answer[0][3]}
I0 value 1,{answer[1][0]}
I0 value 2,{answer[1][1]}
I0 value 3,{answer[1][2]}
I0 value 4,{answer[1][3]}
I1 value 1,{answer[2][0]}
I1 value 2,{answer[2][1]}
I1 value 3,{answer[2][2]}
I1 value 4,{answer[2][3]}
I2 value 1,{answer[3][0]}
I2 value 2,{answer[3][1]}
I2 value 3,{answer[3][2]}
I2 value 4,{answer[3][3]}''', symbols=symbols, name='Index.Nodes', points=40)}}
%include('viewAnswer')

% end
% if 'submit' in pages:

---

% include('worksheet-pledge.md')
% include('submit.md')
%end
