<%
setInfo(
      due="2023-04-11 10:55:00",
      needsSubmitCode=False,
      assessment_type='worksheet',
			pages=['questions', 'submit'],
      penalty=1,
      maxpenalty=1,
      exceptions=dict(_003=dict(needsSubmitCode=False),
                      jhank=dict(needsSubmitCode=False, due='2023-04-12 00:00:00'))
)
dbs = ['fe_sailors1.sqlite', 'fe_sailors2.sqlite']
%>

# Boat Review

<img src="{{LOGO}}" style="float:right; vertical-align:0px; width=50%"/>

% include('worksheet-dont-panic.md')
% include('green-highlight.md')

---

## {{!linkable_header('SQL Tutorial Cheat Sheet')}}

Following are three SQL tutorial cheat sheets available from http://www.sqltutorial.org

<img src="{{static('images/SQLTutorial.1.jpeg')}}" style="width:85%" alt="First of three SQL Tutorial cheat sheets"/>
<img src="{{static('images/SQLTutorial.2.jpeg')}}" style="width:85%" alt="Second of three SQL Tutorial cheat sheets"/>
<img src="{{static('images/SQLTutorial.3.jpeg')}}" style="width:85%" alt="Third of three SQL Tutorial cheat sheets"/>

---

## {{!linkable_header("Sailor's Database Schema")}}

Here are the tables you'll find for the Sailors database used in the final exam.
Your queries will be run against two versions of the database.
One of the databases will be much smaller and only contain a subset of the information.
 
% import json
% schema = json.load(open('./fe_sailors1.json'))
```sql
{{schema}}
```

---
## {{!linkable_header('Questions')}}

% if 'questions' in pages:

---

### Let's look more closely at SQL division.

Let's use this question as an example:

> List all the sailor names who reserved all the boats that have 'lake' in the name

Let's brake this down into three parts:

 1. The main query is to select the sailor names  
 2. The `WHERE NOT EXISTS` has two parts  
    a. List all the boats that have `lake` in the boat name  
    b. List all the boats that this particular sailor has reserved  

---

**Part.I.All.Sailor.Names:** List all the sailor names.  
% answer = '''
-- Main
SELECT S.sname
  FROM Sailors AS S
'''
{{!sql(answer, dbs=dbs, points=20, sort=True, name='Part.I.All.Sailor.Names')}}
% include('viewAnswer')

---

**Part.II.Subpart.A:** List all the boats with 'lake' in the boat name:
% answer = '''
-- Part II first subpart
SELECT B.bid
  FROM Boats AS B
 WHERE B.bname like '%lake%'
'''
{{!sql(answer, dbs=dbs, points=20, sort=True, name='Part.II.Subpart.A')}}
% include('viewAnswer')

---

**Part.II.Subpart.B:** List all the boats reserved by a sailor with an sid=100  
I picked sid of 100 for no particular reason.  
% answer = '''
-- Part II second subpart
SELECT DISTINCT R.bid
  FROM Reserves R
 WHERE R.sid = 100
'''
{{!sql(answer, dbs=dbs, points=20, sort=True, name='Part.II.Subpart.B')}}
% include('viewAnswer')

---

Let's put Part II's two subparts together!

**Part.II:** List all the boats that have 'lake' somewhere in their name
that sailor with an sid=100 **didn't** reserve.
% answer = '''
-- Part II
SELECT B.bid
  FROM Boats B
 WHERE B.bname like '%lake%'

EXCEPT 

SELECT DISTINCT R.bid
  FROM Reserves R
 WHERE R.sid = 100
'''
{{!sql(answer, dbs=dbs, points=20, sort=True, name='Part.II')}}
% include('viewAnswer')

---

Let's put it all together:

**All.Boats.Named.Lake:** List all the sailor names who reserved all the boats that have 'lake' somewhere in their name.  
% answer = '''
-- Division
SELECT S.sname
  FROM Sailors AS S
 WHERE NOT EXISTS (SELECT B.bid
                     FROM Boats AS B
                    WHERE B.bname like '%lake%'

                   EXCEPT

                   SELECT DISTINCT R.bid
                     FROM Reserves AS R
                    WHERE R.sid=S.sid);
'''
{{!sql(answer, dbs=dbs, points=20, sort=True, name='All.Boats.Named.Lake')}}
% include('viewAnswer')

---

% end
% if 'submit' in pages:

% include('worksheet-pledge.md')
% include('submit.md')
%end
