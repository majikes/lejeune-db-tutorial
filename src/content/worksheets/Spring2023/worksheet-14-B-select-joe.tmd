<% setInfo(
      due="2023-04-04 10:55:00",
      needsSubmitCode=True,
        assessment_type='worksheet',
			pages=['questions', 'submit'],
      penalty=1,
      maxpenalty=1,
      exceptions=dict(_003=dict(needsSubmitCode=False),
                      cassitea=dict(needsSubmitCode=False, due="2023-04-06 00:00:00"))
      )
%>

# Chapter 14 Different types of files

<img src="{{LOGO}}" style="float:right; vertical-align:0px; width=50%"/>

% include('worksheet-dont-panic.md')
% include('green-highlight.md')

## {{!linkable_header('Questions')}}

% if 'questions' in pages:

This worksheet is from this slide in class

<img src="{{static('images/Worksheet-14-A-select-joe.png')}}" style="width: 75%" alt="Slide 4 from Chapter 14"/>

---

Assume the following:

Schema has `rname` added to the reserves.

```
Sailors (sid: integer, sname: string, rating: integer, age: real)
Reserves (sid: integer, bid: integer, day: dates, rname: string)
```

The Sailors table has a cardinality of 40,000.
Each tuple is 50 bytes, 80 tuples per page, 500 pages.

The Reserves table has a cardinality of 100,000.
Each tuple is 40 bytes, 100 tuples per page, 1000 pages.

---

The query is:

```sql
SELECT * 
  FROM Reserves R
 WHERE R.rname like 'Joe%'
```

Each of these questions below assume each of these different types of Reserves files.  
 1. No index, unsorted  
 2. No index, sorted by rname  
 3. Clustered, B+ Tree with index on rname  

---

**No.Index.Unsorted.File**: For the first scenario, it was assumed that to complete the query
the entire **unsorted,** Reserves file had to be read and it required 1000 I/Os.  
Select all the reasons that apply to the reasoning that came to this conclusion.
% answer = ['False', 'True', 'False', 'False', 'False', 'False', 'False', 'True', 'False']
{{!table(inputs=1, headings='Question,Answer', table=f'''
The file is sorted on rname,{answer[0]}
The file is unsorted or at least not sorted on rname,{answer[1]}
The file is unclustered,{answer[2]}
A hash index is used,{answer[3]}
A B+ tree index is used,{answer[4]}
The B+ tree index has a height of 2,{answer[5]}
Less than 200 rnames start with Joe,{answer[6]}
The entire file has to be scanned,{answer[7]}
A binary search of the file will be done,{answer[8]}''', points=30, symbols=answer, name='No.Index.Unsorted.File')}}
%include('viewAnswer')


**No.Index.Sorted.File**: For the second scenario, it was assumed that to complete the query
on Reserves sorted on rname,
that only 10 I/Os are required.  
Select all the reasons that apply to the reasoning that came to this conclusion.
% answer = ['True', 'False', 'False', 'False', 'False', 'False', 'False', 'False', 'True']
{{!table(inputs=1, headings='Question,Answer', table=f'''
The file is sorted on rname,{answer[0]}
The file is unsorted or at least not sorted on rname,{answer[1]}
The file is unclustered,{answer[2]}
A hash index is used,{answer[3]}
A B+ tree index is used,{answer[4]}
The B+ tree index has a height of 2,{answer[5]}
Less than 200 rnames start with Joe,{answer[6]}
The entire file has to be scanned,{answer[7]}
A binary search of the file will be done,{answer[8]}''', points=30, symbols=answer, name='No.Index.Sorted.File')}}
%include('viewAnswer')


**B.Tree.Indexed.File**: For the third scenario, it was assumed that to complete the query
that number of the I/Os required would be only 1% of the full scan.  
Select all the reasons that apply to the reasoning that came to this conclusion.
% answer = ['True', 'False', 'False', 'False', 'True', 'True', 'True', 'False', 'False']
{{!table(inputs=1, headings='Question,Answer', table=f'''
The file is sorted on rname,{answer[0]}
The file is unsorted or at least not sorted on rname,{answer[1]}
The file is unclustered,{answer[2]}
A hash index is used,{answer[3]}
A B+ tree index is used,{answer[4]}
The B+ tree index has a height of 2,{answer[5]}
Less than 200 rnames start with Joe,{answer[6]}
The entire file has to be scanned,{answer[7]}
A binary search of the file will be done,{answer[8]}''', points=30, symbols=answer, name='B.Tree.Indexed.File')}}
%include('viewAnswer')


---

% end
% if 'submit' in pages:

% include('worksheet-pledge.md')
% include('submit.md')
%end
