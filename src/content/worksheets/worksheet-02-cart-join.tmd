<%
import json
with open('wkst.university1.json') as fid:
      university_data = json.load(fid)
setInfo(assessment_type='worksheet',
)
dbs = ['wkst.university1.sqlite', 'wkst.university2.sqlite']
%>

<img src="{{LOGO}}" style="float:right; vertical-align:0px"/>
# 02 Select and project

% include('worksheet-dont-panic.md')
% include('green-highlight.md')
% import string
% letter_symbols = [x for x in string.ascii_uppercase[:10]]

---

## {{!linkable_header('SQL Tutorial Cheat Sheet')}}

Following are three SQL tutorial cheat sheets available from http://www.sqltutorial.org

<img src="{{static('images/SQLTutorial.1.jpeg')}}" style="width:85%" alt="First of three SQL Tutorial cheat sheets"/>
<img src="{{static('images/SQLTutorial.2.jpeg')}}" style="width:85%" alt="Second of three SQL Tutorial cheat sheets"/>
<img src="{{static('images/SQLTutorial.3.jpeg')}}" style="width:85%" alt="Third of three SQL Tutorial cheat sheets"/>

---

### {{!linkable_header('Database used')}}

The schema for the database used in this class is below.
It is from the database used in chapter 3 of the book 
that describes a university.

<pre>
 <code class="sql">
  % for line in university_data.split('\n'):
    {{line}}
  % end
 </code>
</pre>

--- 

## {{!linkable_header('Questions')}} 


**Instructor.Cross.Teaches:** Write a SQL query equivalent to the relational algebra: $\text{Instructor} \times \text{Teaches}$  
**NOTE:** Although in relational algebra, the order of the columns does not matter, in COMP 421 web browser, it does.
% answer = '''
SELECT DISTINCT *
  FROM Instructor, Teaches
'''
{{!sql(answer, dbs=dbs, sort=True, points=33, name='Instructor.Cross.Teaches')}}
%include('viewAnswer')

---

**Instructor.Join.Teaches:** Write a SQL query equivalent to the relational algebra: $\text{Instructor} \bowtie_{\text{instructor.ID}=\text{teaches.ID}}  \text{Teaches}$  
**NOTE:** Although in relational algebra, the order of the columns does not matter, in COMP 421 web browser, it does.
% answer = '''
SELECT DISTINCT *
  FROM Instructor, Teaches
 WHERE Instructor.ID = Teaches.ID 
'''
{{!sql(answer, dbs=dbs, sort=True, points=33, name='Instructor.Join.Teaches')}}
%include('viewAnswer')


---

**Instructor.Name.Join.Teaches.Course:** Write a SQL query equivalent to the relational algebra: $ \Pi_{\text{instructor.name}, \text{teaches.course}\underline{&nbsp;}\text{id}} (\text{Instructor} \bowtie_{\text{instructor.ID}=\text{teaches.ID}}  \text{Teaches})$  
% answer = '''
SELECT  DISTINCT Instructor.name, Teaches.course_id
  FROM Instructor, Teaches
 WHERE Instructor.ID = Teaches.ID 
'''
{{!sql(answer, dbs=dbs, sort=True, points=34, name='Instructor.Name.Join.Teaches.Course')}}
%include('viewAnswer')



% include('worksheet-submit.md')
