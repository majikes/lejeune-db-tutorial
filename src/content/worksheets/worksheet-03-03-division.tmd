<%
import json
with open('wkst.university1.json') as fid:
    university_data = json.load(fid)
setInfo(assessment_type='worksheet')
dbs = ['wkst.university1.sqlite', 'wkst.university2.sqlite']
%>

# 03 SQL Relational Division

<img src="{{LOGO}}" style="float:right; vertical-align:0px; width=50%"/>

% include('worksheet-dont-panic.md')
% include('green-highlight.md')

---

## {{!linkable_header('SQL Tutorial Cheat Sheet')}}

Following are three SQL tutorial cheat sheets available from http://www.sqltutorial.org

<img src="{{static('images/SQLTutorial.1.jpeg')}}" style="width:85%" alt="First of three SQL Tutorial cheat sheets"/>
<img src="{{static('images/SQLTutorial.2.jpeg')}}" style="width:85%" alt="Second of three SQL Tutorial cheat sheets"/>
<img src="{{static('images/SQLTutorial.3.jpeg')}}" style="width:85%" alt="Third of three SQL Tutorial cheat sheets"/>

---

## {{!linkable_header("Database used")}}

The schema for the database used in this class is below.
It is from the database used in chapter 3 of the book
that describes a university.
 
<pre>
 <code class="sql">
  % for line in university_data.split('\n'):
    {{line}}
  % end
 </code>
</pre>

---
## {{!linkable_header('Questions')}}


### Let's look more closely at SQL division.

Let's use this question as an example:

> List all the computer science instructors' names who teach all the computer science courses.

Let's brake this down into three parts:

 1. The main query is to select all the computer instructor names
 2. The `WHERE NOT EXISTS` has two parts  
    a. List all the computer science courses  
    b. List all the computer science courses taught by a computer science professor<br/>For any professor, if you list all the CS courses and subtract all the ones taught by that professor $\dots$ if the result is empty, that professor teaches all the CS courses.


---

**Part.I.All.CS.Instructors** List all the names of computer science instructors.
% answer = '''
-- Main
SELECT I.name
  FROM Instructor I
 WHERE dept_name = 'Comp. Sci.'
'''
{{!sql(answer, dbs=dbs, points=20, sort=True, name='Part.I.All.CS.Instructors')}}
% include('viewAnswer')

---

**Part.II.Subpart.A:** List the course id for all the computer science courses:  
% answer = '''
-- Part II first subpart
SELECT C.course_id
  FROM Course C
 WHERE dept_name = 'Comp. Sci.'
'''
{{!sql(answer, dbs=dbs, points=20, sort=True, name='Part.II.Subpart.A')}}
% include('viewAnswer')

---

**Part.II.Subpart.B:** List all the course ids of all computer science courses taught by the computer science instructor with ID of 31601.  
I picked ID of 31601 just because it's mine.  
% answer = '''
-- Part II second subpart
SELECT DISTINCT T.course_id
  FROM Teaches T, Course C
 WHERE T.course_id = C.course_id and
       T.ID = 31601
'''
{{!sql(answer, dbs=dbs, points=20, sort=True, name='Part.II.Subpart.B')}}
% include('viewAnswer')

---

Let's put Part II's two subparts (part A and part B) together!

**Part.II:** List all the computer science course IDs that are **<font color='red'>NOT</font>**
taught by computer science instructor with ID 31601.
% answer = '''
-- Part II
SELECT C.course_id
  FROM Course C
 WHERE dept_name = 'Comp. Sci.'

EXCEPT

SELECT DISTINCT T.course_id
  FROM Teaches T, Course C
 WHERE T.course_id = C.course_id and
       T.ID = 31601
'''
{{!sql(answer, dbs=dbs, points=20, sort=True, name='Part.II')}}
% include('viewAnswer')

---

Let's put it all together:
<ul>
 <li>Find the names of all the CS professors. 
  <ul>
   <li>Except for the professors who have any courses in the following:
    <ul>
     <li>List all the CS courses</li>
     <li>Remove the ones taught by this professor</li>
     <li>If the result is empty, the professor teaches all CS courses </li>
    </ul></li>
   </ul></li>
 </li>
</ul> 

**All.CS.Instructors.Who.Taught.All.CS.Courses:**  List the names of all computer
science instructors who have taught all the computer science courses.
% answer = '''
-- Division
SELECT I.name
  FROM Instructor I
 WHERE dept_name = 'Comp. Sci.' AND
       NOT EXISTS (SELECT C.course_id
                     FROM Course C
                    WHERE dept_name = 'Comp. Sci.'

                   EXCEPT

                   SELECT DISTINCT T.course_id
                     FROM Teaches T, Course C
                    WHERE T.course_id = C.course_id and
                          T.ID = I.ID -- Using I.ID from select 
                          )
'''
{{!sql(answer, dbs=dbs, points=20, sort=True, name='All.CS.Instructors.Who.Taught.All.CS.Courses')}}
% include('viewAnswer')


% include('worksheet-submit.md')
