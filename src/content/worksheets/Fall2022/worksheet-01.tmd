<%
setInfo(
      due="2021-08-26 23:59:59",
			pages=['questions', 'submit'],
      maxpenalty=0.75, penalty=.2,
      exceptions=dict(jenny13=dict(due="2020-09-01 18:00:00"))
)
%>

<img src="{{static('images/COMP421Logo.png')}}" style="float:right; vertical-align:0px; width=50%"/>

% include('worksheet-dont-panic.md')
% include('green-highlight.md')


## {{!linkable_header('Questions')}}

% if 'questions' in pages:

---

# Chapter 1 worksheet

Zamazon: DBMS vs File Systems

You are a senior software developer at Zamazon mentoring a new intern.

Unfortunately, the intern did not take COMP 421.

The intern believes storing all customer data in the file system is better than storing the data in a database management system (DBMS) because it's convenient.

Which of the following are valid reasons you could give for using a DBMS over a file system?

A) Since many different users access the data concurrently, the DBMS can prevent inconsistencies in the data.

B) Different users should have the different level of security access of the data, which is easier to enforce with a DBMS.

C) DBMS have no overhead so querying a DBMS will always be faster than querying a file system for the same information.

D) A and B

E) A and C

F) B and C

% answer = 'D'
% answer2 = f'''
DBMS can prevent inconsistency in data given when file read and when presented.
And users may not have authority to access

Answer = {answer}'''
{{!select(answer, list('ABCDEF'), points=8, name='Zamazon')}}
%include('viewAnswer', answer=answer2)

---


A zoo manages data about their animals, their exhibits, and their zoo keepers
in a database. The database has the following conceptual schema:
```sql
animals(animal_id: string, animal_name: string, species_name: string, weight: real, age: integer)   
exhibits(exhibit_name: string, maximum_capacity: integer)   
zoo_keepers(employee_id: string, employee_name: string)   
lives_in(animal_id: string, exhibit_name: string, start_date: date, end_date: date)   
looks_after(employee_name: string, animal_id: string, feeding_time_of_day: integer)   
```


% answer = ['5', '5', '5', '3', '2']
% answer2 = f'''
1. There are five tables, hence five relations
2. Animals have attributes animal id, name, species, weight, and age.  5
3. Attribute and field are used interchangeably.  5
4. Entities are nouns. Animals, exhibits, and zoo keepers.  3
5. Relationships are how entities interact. lives_in and looks_after. 2

Answer: {answer}'''
Concept.Schema: Answer the following questions about this conceptual schema:  
{{!table(inputs=1, headings='''Question,Input your answer here''', table='''
How many tables does this conceptual schema have?,5
How many attributes does the animals table have?,5
How many fields does the animals table have?,5
How many tables in this conceptual schema represent an entity?,3
How many tables in this conceptual schema represent a relationship?,2''',symbols=['0','1','2','3','4','5'], points=10, name='Concept.Schema')}}
%include('viewAnswer', answer=answer2)

---

On the zoo website which uses our database, the zoo website displays the name, species, and the zookeeper of each animal with this external schema:
```sql
animal_info(animal_name: string, species_name: string, employee_name: string)
```

External.Schema: Which of the following statements are reasons why the relation animal_info is in the external schema and is not in the conceptual schema?  
A) Reduce abstraction and reduce data independence of the database  
B) Limit redundancy that could lead to inconsistencies  
C) Prevent wasting space from storing repeated data  
D) A and B  
E) A and C  
F) B and C  
% answer = 'F'
% answer2 = f'''
We're limiting redundancy and inconsistency B
But we're also saving space C

Answer: {answer}'''
{{!select(answer, list('ABCDEF'), points=4, name='External.Schema')}}
% include('viewAnswer', answer=answer2)

---


% answer = 'False'
% answer2 = f'''
DBS page 12
DDL used to define the external and conceptual schema.
Physical schema summaries storage details.

Answer: {answer}'''
% choices = ['True', 'False']
Data.Definition.Language: 
A data definition language (DDL) is used to define the conceptual and physical schemas.
True or False?  
{{!select(answer, choices, points=10, name='Data.Definition.Language')}}  
% include('viewAnswer', answer=answer2)

---


% answer = 'True'
% answer2 = f'''
DBS page 16
DBMS enables users to create, modify, and query data through the DML

Answer: {answer}'''
Data.Manipulation.Language: The data manipulation language (DML) allows users to create, modify, and query data in the DBMS.
True or False?  
{{!select(answer, choices, points=4, name='Data.Manipulation.Language')}}
% include('viewAnswer', answer=answer2)


% answer = 'True'
% answer2 = f'''
DBS page 16
The DML and DDL are collectively referred to as the <b>data sublanguage</b> 
when embedded within a <b>host language (C or COBOL)</b>

Answer: {answer}'''
DDL.and.DML: Together, the DML and DDL form the data sublanguage, and the data sublanguage is embedded within a host language.
True or False?  
{{!select(answer, choices, points=4, name='DDL.and.DML')}}  
% include('viewAnswer', answer=answer2)

---

Schemas: Which of the following statements about schemas is true?  
A) A given database can have more than one external schema.  
B) A given database can have more than one conceptual schema.  
C) A given database can have more than one physical schema.  
D) All of the above.  
% answer = 'A'
% answer2 = f'''
DBS page 13 Concept Schema describes <b>all relations</b> stored in the database.
Therefore only one.

Answer: {answer}'''
{{!select('A', list('ABCD'), points=4)}}
% include('viewAnswer', answer=answer2)

---


% answer = 'before'
Write-Ahead.Log: When does a write-ahead log record each action in the log?  Before or after the corresponding change is made in the database?  
{{!select(answer, [answer, 'after'], points=4, name='Write-Ahead.Log')}}  
% include('viewAnswer')

---

Crash.Recovery: Which of the following statements is an effective method a DBMS uses to recover from a crash while performing transactions?

A) Automatically revert to the last saved checkpoint, ignoring all the changes made since that checkpoint was saved

B) Find all partially executed transactions using the write-ahead log and resume them for increased efficiency

C) Find all partially executed transactions using the write-ahead log and revert them since transactions should be all or nothing actions

D) Start over with an empty database and execute every transaction in the write-ahead log

% answer = 'C'
{{!select(answer, list('ABCD'), points=4, name='Crash.Recovery')}}
% include('viewAnswer')

--- 

% end
% if 'submit' in pages:
% include('worksheet-pledge.md')
% include('submit.md')
%end
