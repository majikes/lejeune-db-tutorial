<%
setInfo(
        due='2021-11-30 14:34:00',
        duration=10,
        exam=False,
        needsSubmitCode=True,
        exceptions=dict(gksrb32=dict(due='2021-12-01 00:00:00', needsSubmitCode=False),
                        _003=dict(needsSubmitCode=False, duration=999)),
        pages=['questions', 'submit'],
        maxpenalty=0.75, penalty=.5,
        )
dbs=['books1.sqlite', 'books2.sqlite']
%>

<img src="{{static('images/COMP421Logo.png')}}" style="float:right; vertical-align:0px"/>

# Mock FE-B Fiction authors

% include('worksheet-dont-panic.md')
% include('green-highlight.md')

--- 

## Questions

% if 'questions' in pages:

```sql
CREATE TABLE authors (
          login text primary key,
          email text,
          first_name text,
          last_name text
      )

CREATE TABLE books (
          id integer primary key autoincrement,
          title text,
          author text references authors(login),
          language text,
          created date
      )

CREATE TABLE photos (
          id integer primary key autoincrement,
          url text unique,
          width integer,
          height integer
      )

CREATE TABLE pages (
          book integer references books(id),
          number integer,
          photo integer references photos(id),
          caption text,
          primary key (book, number)
      )

CREATE TABLE categories (
          category text,
          book integer references books(id),
          unique (book, category)
      )

CREATE VIEW pagecounts as
          select book, count(*) as count from pages group by book
```
---

The last query on this worksheet might be a question on the final exam.
If it were, notice how I worked through the question in pieces?
I wouldn't try to solve the question in one try.

This is similar to how you wouldn't write 100 lines of code and then test it.
You need to start with small pieces of code and work your way up to the final solution.

---

**Fiction.Book.Titles:** List the fiction book titles in alphabetical order.  
% answer = '''
SELECT DISTINCT B.title
  FROM Books B, Categories C
 WHERE B.id = C.book AND
       category='Fiction'
 ORDER by title;
'''
{{!sql(answer, dbs=dbs, sort=0, points=25, name='Fiction.Book.Titles')}}
% include('viewAnswer')

---

**Fiction.Authors:** List first and last name of authors who have written fiction books.  
% answer = '''
SELECT DISTINCT first_name, last_name
  FROM Authors A, Books B, Categories C
 WHERE B.id = C.book AND
       A.login=B.author AND
       category='Fiction'
'''
{{!sql(answer, dbs=dbs, sort=1, points=25, name='Fiction.Authors')}}
% include('viewAnswer')

---

**Fiction.Authors.Count:** List first and last name of authors who have written fiction books and the number of fiction books they have written.  
Produce the list with the author who has written the most fiction books at the top of the list.  
% answer = '''
SELECT DISTINCT first_name, last_name, count(DISTINCT(title)) as f_count
  FROM Authors A, Books B, Categories C
 WHERE B.id = C.book AND
       A.login=B.author AND
       category='Fiction'
  GROUP BY A.login
  ORDER BY f_count DESC
'''
{{!sql(answer, dbs=dbs, sort=1, points=25, name='Fiction.Authors.Count')}}
% include('viewAnswer')

---

**Most.Fiction.Author:** List the first and last name of the author that has written the most fiction books.  
% answer = '''
WITH M as (SELECT count(*) as m_count
             FROM Authors A, Books B, Categories C
            WHERE B.id = C.book AND
                  A.login=B.author AND
                  category='Fiction'
            GROUP BY A.login
            ORDER BY m_count DESC
            LIMIT 1)
SELECT DISTINCT first_name, last_name, count(DISTINCT(title)) as f_count
  FROM Authors A, Books B, Categories C, M
 WHERE B.id = C.book AND
       A.login=B.author AND
       category='Fiction'
  GROUP BY A.login
  HAVING M.m_count = f_count
'''
{{!sql(answer, dbs=dbs, sort=1, points=25, name='Most.Fiction.Author')}}
% include('viewAnswer')

%end

---

% if 'submit' in pages:
% include('worksheet-pledge.md')
% include('submit.md')
% end
