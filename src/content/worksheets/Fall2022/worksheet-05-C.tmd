<%
import json
setInfo(
      due="2022-09-14 10:55:00",
      needsSubmitCode=True,
      assessment_type='worksheet',
			pages=['questions', 'submit'],
      penalty=1,
      maxpenalty=1,
      points_limit=100,
      exceptions=dict(_003=dict(needsSubmitCode=False),
                      pradyun=dict(needsSubmitCode=False, due='2022-09-15 00:00:00'),
                      tntran3=dict(needsSubmitCode=False, due='2022-09-15 00:00:00'),
                      )
)
with open('content/worksheets/sailors.json', encoding='utf-8') as fid:
    schema = json.load(fid)
dbs = ['sailors.sqlite', 'sailors1.sqlite']
%>

# Chapter 5.5 Group BY AND Having

<img src="{{LOGO}}" style="float:right; vertical-align:0px; width=50%"/>

% include('worksheet-dont-panic.md')
% include('green-highlight.md')

---

## {{!linkable_header('Worksheet schema')}}

Here is the schema used in this worksheet:

```sql
 % for line in schema.split('\n'):
    {{!line}}
 % end
```

---

## {{!linkable_header('SQL Tutorial Cheat Sheet')}}

Following are three SQL tutorial cheat sheets available from http://www.sqltutorial.org

<img src="{{static('images/SQLTutorial.1.jpeg')}}" style="width:85%" alt="First of three SQL Tutorial cheat sheets"/>
<img src="{{static('images/SQLTutorial.2.jpeg')}}" style="width:85%" alt="Second of three SQL Tutorial cheat sheets"/>
<img src="{{static('images/SQLTutorial.3.jpeg')}}" style="width:85%" alt="Third of three SQL Tutorial cheat sheets"/>

---

## {{!linkable_header('Questions')}}

% if 'questions' in pages:

---

**<font size="+.5" color="red"> You only have to answer four of the five questions to get a 100%</font>**  
**Only three questions are needed to get a 75% which, if handed in early, constitutes a 100%** 

**Reservations.Per.Day:** List each reservation date and the number of reservations for that day.  
% answer = f'''
SELECT R.day, COUNT(*)
  FROM Reserves AS R
 GROUP BY R.day
'''
{{!sql(answer, dbs=dbs, points=25, name='Reservations.Per.Day', sort=True)}}
% include('viewAnswer')

---

**How.Many.Names:** List each name and the number of sailors with that name.  
% answer = f'''
SELECT S.sname, COUNT(*)
  FROM Sailors AS S
 GROUP BY S.sname
'''
{{!sql(answer, dbs=dbs, points=25, name='How.Many.Names', sort=True)}}
% include('viewAnswer')

---

**How.Many.Reservations:** List each sid, the sailor name, and the number of reservations the sailor made.  
% answer = f'''
SELECT S.sid, S.sname, COUNT(*)
  FROM Sailors AS S, Reserves as R
 WHERE S.sid=R.sid
 GROUP BY S.sid, S.sname
'''
{{!sql(answer, dbs=dbs, points=25, name='How.Many.Reservations', sort=True)}}
% include('viewAnswer')

---

**Question.31**: List each rating level along with the age of the youngest sailor in that rating level.  
% answer = f'''
SELECT S.rating, MIN(S.age)
  FROM Sailors AS S
 GROUP BY S.rating
'''
{{!sql(answer, dbs=dbs, points=25, name='Question.31', sort=True)}}
% include('viewAnswer')

---

**Question.32:** List each rating level that has at least two sailors who are eligible 
to vote (is at least 18 years old) along with the age of the youngest sailor who is eligible to vote in that rating level.   
% answer = f'''
SELECT S.rating, MIN(S.age) as minage
  FROM Sailors AS S
 WHERE S.age >= 18
 GROUP BY S.rating
HAVING COUNT(*) > 1
'''
{{!sql(answer, dbs=dbs, points=25, name='Question.32', sort=True)}}
% include('viewAnswer')

---

% end
% if 'submit' in pages:

% include('worksheet-pledge.md')
% include('submit.md')
%end
