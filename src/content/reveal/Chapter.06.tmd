---
title: {{TITLE}}
theme: "comp550"
separator: "^---"
verticalSeparator: "^----"
notesSeparator: "^Note:"
revealOptions:
    transition: fade

---

## Today's class

#### Design using E-R Model

- Topics covered
  - The Entity-Relationship model
  - Complex Attributes
  - Mapping Cardinalities
  - Primary key
  - Weak entities
 
Today we will get a basic terminology needed for chapter 7
on how you refine, create, design a database schema



Note:

https://www.db-book.com/slides-dir/PDF-dir/ch6.pdf

---

## Design Phase

- Need to fully understand many database users
  - Translating requirements into data model and schema
  - Business requirements, physical design, etc
- Avoid redundancy
  - Problematic for updates and deletes
- Incompleteness
  - Missing relationships 
  - Data model's inability to represent enterprise
- ER model facilitates DB design
  - Entity sets
  - Relationship sets
  - Attributes

---

## Entity Sets

 - **entity** - object that exists. Distinguishable from other objects
   - Example:  **specific** person, company, event, plant
 - **entity set** set of same type entities with same properties
   - Example: **set of** all persons, companies, trees, holidays
 - Entity represented by a set of attributes
   - Properties possessed by all members of an entity set.
```
instructor = (ID, name, salary)
course = (course_id, title, credits)
```
 - A subset of the attributes form an entity set's _primary key_
   - Primary key uniquely identifies each member of the set


---

## Representing Entity sets in ER Diagram

 - Entity sets can be represented graphically as follows:
   - Rectangles represent entity sets.
   - Attributes listed inside entity rectangle
   - Underline indicates primary key attributes

<div class="row">
 <div class="twocolumns">
  <figure style="border: 0">
    <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.1.instructor.entity.png" style="width:35%"/>
    <figcaption>Figure 6.1 Instructor Entity</figcaption>
  </figure>
 </div>
 <div class="twocolumns">
  <figure style="border: 0">
    <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.1.student.entity.png" style="width:35%"/>
    <figcaption>Figure 6.1 Student Entity</figcaption>
  </figure>
 </div>
</div>

---

## Entity Sets
### instructor and student


<div class="row">
 <div class="twocolumns">
  <figure style="border: 0">
    <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.1.instructor.entity.set.png" style="width:35%"/>
    <figcaption>Figure 6.1 Instructor Entity Set</figcaption>
  </figure>
 </div>
 <div class="twocolumns">
  <figure style="border: 0">
    <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.1.student.entity.set.png" style="width:35%"/>
    <figcaption>Figure 6.1 Student Entity Set</figcaption>
  </figure>
 </div>
</div>

---

## Relationship Sets

 - A **relationship** is an association among several entities Example:

<table style="border: 1">
 <tr>
  <th>student entity</th>
  <th>relationship set</th>
  <th>instructor entity</th>
 </tr>  
  <td>44553 (Peltier)</td>
  <td></td>
  <td>22222 (Einstein)</td>
 </tr>
</table>


 - **relationship set:** mathematical relation among $n \ge 2$ entities
   - Relationship of $n$ entities $(e_1, e_2, \dots, e_n$)
   - Each entity taken from entity sets s.t. $(e_1, e_2, \dots, e_n$)
     - $\\{ e_1 \in E_1, e_2 \in E_2, \dots, e_n \in E_n \\}$
   - Example: <br/>$ (44553, 22222) \in \mbox{advisor}$


---

## Relationship Sets (Cont.)

 - Example: The relationship set _advisor_ denotes the associations between students and the instructors who act as their  advisors.
 - Pictorially, we draw a line between related entities.

<figure style="border: 0">
  <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.2.relationship.set.png" style="width:50%"/>
  <figcaption>Figure 6.2 Relationship set</figcaption>
</figure>

Note:

In the picture, recognize advisor is one-to-many students because an advisor can have more than one advise.

But the relationship from student to advisor is many-to-one because many students can have one advisor:w


---

## Relationship Sets 
### ER Diagrams 

 - Diamonds represent relationship sets.

<figure style="border: 0">
 <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.3.ER.diagram.showing.relationship.set.advisor.png" style="width:75%"/>
 <figcaption>Figure 6.3 E-R diagram showing relationship set advisor</figcaption>
</figure>


---

## Relationship Sets (Cont.)

 - An attribute can also be associated with a relationship set
 - What if date of the start of the advisor relationship needed

<figure style="border: 0">
 <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.2.relationship.set.advisor.date.student.png" style="width:50%"/>
 <figcaption>Relationship set instructor, date, student<br/>Not in book</figcaption>
</figure>

Note:

Also useful for student entities and sections which have a relationship of takes which has an attribute of grade.

---

## Relationship Sets with Attributes

<figure style="border: 0">
 <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.2.relationship.set.advisor.date.student.with.attributes.png" style="width:75%"/>
 <figcaption>Relationship set instructor, date, student with attributes</figcaption>
</figure>


---

## Roles

 - Entity sets of a relationship need not be distinct
   - Each entity set occurrence plays "role" in relationship
   - Clarifies when not implicit
   - When entities appear in pairs within a relationship
 - The labels “course_id” and “prereq_id” are **roles**.

<figure style="border: 0">
 <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.4.E-R.diagram.with.role.indicators.png" style="width:75%"/>
 <figcaption>Figure 6.4 E-R diagram with role indicators</figcaption>
</figure>

Note:

The course_id is a prerequisite for another course_id

When you see this, the select statements will have `from course as C1, course as C2`

Note that role indicators are only REQUIRED when non-distinct

---

## Relationship Set Degree

 - Binary relationship
   - involve two entity sets (or degree two)
   - most relationship sets are binary
 - Ternary relations exist but are more rare

Note:

Next slide shows a ternary relationship

---

## Ternary Relationship Sets
### Research projects

 - _students_ work on research _projects_ w/ guidance of _instructor_
   - relationship proj_guide is a ternary relationship
   - Relationship between _instructor_, _student_, and _project_

<figure style="border: 0">
 <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Ternary.Relationship.instructor.student.project.with.attributes.png" style="width:50%"/>
 <figcaption>Ternary relationship instructor, student,project with attributes</figcaption>
</figure>

Note:

Before we go onto attributes, ternary attributes tend to be hard for some students.
But just spend a little time on it, it's just getting your head around it.

Make sure there are no questions.  There probably are

---

## Attributes

 - Attribute types:
   - **Simple** and **composite** attributes.
   - **Single-valued** and **multivalued** attributes
     - Multivalued example: _phone_numbers_
   - **Derived** attributes
     - Can be computed from other attributes
     - Example: age derive from date_of_birth
 - **Domain** – the set of permitted values for each attribute 

Note:

Attributes can be simple or composite. (address could be your house number and street)  

ID would be a single valued attribute while a phone number might be a multivalued one

Derived attribute could be a grade, date of birth -> age

All attributes (simple, composite, etc) have domains

---

## Composite Attributes

 - Composite attributes allow division of attributes into subparts
   - Made up of other attributes

<figure style="border: 0">
 <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.7.Composite.attributes.instructor.name.address.png" style="width:75%"/>
 <figcaption>Figure 6.7 Composite attributes: instructor, name, address</figcaption>
</figure>

Note:

Name could be made up of first, middle, last name


---

## Complex Attributes in ER Diagram



<figure style="border: 0">
 <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.8.ERdiagram.with.composite.multivalued.attributes.png" style="width:15%"/>
 <figcaption>Figure 6.8 E-R diagram with composite, multivalued, and derived attributes</figcaption>
</figure>

Note: 

Next we'll look at how relationships have cardinality

---

## Mapping Cardinality Constraints

 - Express number entities associated in relationship set
   - Usually in binary sets
     - One to one, One to many, Many to one, Many to many 


<div class="row">
 <div class="twocolumns">
  <figure style="border: 0">
    <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.9.a.One.To.One.cardinality.png" style="width:25%"/>
    <figcaption>Figure 6.9 (a) One-to-one</figcaption>
  </figure>
 </div>
 <div class="twocolumns">
  <figure style="border: 0">
    <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.9.b.One.To.Many.cardinality.png" style="width:25%"/>
    <figcaption>Figure 6.9 (b) One-to-many</figcaption>
  </figure>
 </div>
</div>

 - **<font color='red'>Note</font>** some elements in $A$ and $B$ may not be mapped



---

## Representing Cardinality

- ER diagrams express relationship cardinality
  - "one" expressed using a directed line with head (→)
  - “many” expressed using an undirected line (-)
  - One-to-one relationship between _instructor_ and _student_ double arrow

<figure style="border: 0">
  <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.11.a.One.to.One.diagram.png" style="width:75%"/>
  <figcaption>Figure 6.11 (a) One-to-one cardinality diagram</figcaption>
</figure>

Note:

Receiver of the one is the arrow head 

Many-to-many is a dashed line

---

## One-to-Many Relationship

 - one-to-many relationship between an _student_ and a _instructor_
   - an advisor may advise many students
   - a student associated w/ at most one instructor

<figure style="border: 0">
  <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.11.b.One.to.Many.diagram.png" style="width:75%"/>
  <figcaption>Figure 6.11 (b) One-to-many cardinality diagram</figcaption>
</figure>

---

## Many-to-One Relationships

 - many-to-one relationship between an _instructor_ and a _student_ 
   - an instructor is associated with at most one student via _advisor_ 
   - a student is associated with several (including 0) instructors via  _advisor_

<figure style="border: 0">
  <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.11.c.Many.to.One.diagram.png" style="width:75%"/>
  <figcaption>Figure 6.11 (c) Many-to-one cardinality diagram</figcaption>
</figure>

Note:

This is not the normal way you'd have it.

Instructors generally have more than one student advisee

---

## Many-to-Many Relationship

 - An instructor is associated with several (possibly 0) students via _advisor_
 - A student is associated with several (possibly 0) instructors via _advisor_

<figure style="border: 0">
  <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.11.d.Many.to.Many.diagram.png" style="width:75%"/>
  <figcaption>Figure 6.11 (d) Many-to-Many cardinality diagram</figcaption>
</figure>


---
{{HIDDEN }}

## Total and Partial Participation

 - **Total participation** (double/bold line):  every entity in the entity set participates in at least one relationship in the relationship set participation of _student_ in _advisor_ relation is total
 - every _student_ must have an associated instructor
 - **Partial participation**:  some entities may not participate in any relationship in the relationship set
   - Example: previous _instructor_ in _advisor_ relationship

<figure style="border: 0">
  <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.12.Total.Participation.diagram.png" style="width:75%"/>
  <figcaption>Figure 6.12 Diagram showing total participation</figcaption>
</figure>

---

{{HIDDEN}}

## Notation for Expressing More Complex Constraints

 - A relationship may have an associated minimum and maximum cardinality
   - Shown with $l..h$ cardinality
   - A minimum value of $l=1 \rightarrow$ total participation.
   - A maximum value of $h=1 \rightarrow$ an entity participates in at most one relationship
   - A maximum value of * indicates no limit.
 - Example
   - Instructor can advise 0 or more students.  A student must have 1  advisor; cannot have multiple advisors

<figure style="border: 0">
  <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.13.Diagram.with.cardinality.limits.png" style="width:50%"/>
  <figcaption>Figure 6.13 Diagram with cardinality limits</figcaption>
</figure>

---

{{HIDDEN}}

## Cardinality Constraints on Ternary Relationship

 - We allow at most one arrow out of a ternary (or greater degree)  relationship to indicate a cardinality constraint
 - For example, an arrow from <i>proj_guide</i> to _instructor_ indicates each  student has at most one guide for a project
 - If there is more than one arrow, there are two ways of defining the  meaning.  
   - For example, a ternary relationship _R_ between $A$,<i> B </i>and _C_ with  arrows to _B_ and _C_ could mean 1.      Each _A_ entity is associated with a unique entity from B and _C_ or  2.     Each pair of entities from (<i>A, B</i>) is associated with a    unique  _C_ entity, and each pair (<i>A, C</i>) is associated  with a unique $B$
     - Each alternative has been used in different formalisms
     - To avoid confusion we outlaw more than one arrow


---

## Primary Key

 - Primary keys provide a way to specify how entities and  relations are  distinguished.  We will consider:
   - Entity sets
   - Relationship sets.
   - Weak entity sets


---

## Entity set primary key

 - For sets entities are distinct
   - No two entities in an entity set are allowed to have exactly the same  value for all attributes.
 - Primary key for an entity is attributes set is sufficient to distinguish entities from each other

---

## Relationship Sets primary key

 - To distinguish relations use individual entities primary keys
   - Let $R$ be relationship set involving  { $E_1, E_2, \dots, E_n$ }
   - Primary key for R is union of the primary keys of $E_1,$ $E_2,$ $\dots,$ $E_n$
   - If $R$ has attributes $a_1,$ $a_2,$ $\dots,$ $a_n$ associated with it
     - Primary key of $R$ also includes the attributes $a_1,$ $a_2,$ $\dots,$ $a_m$
 - Example: relationship set “advisor”.
   - The primary key consists of _instructor.ID_  and _student.ID_
 - Relationship set primary key depends on the mapping cardinality

---

## Relationship set primary key
### Binary Relationship

 - Many-to-Many relationships. Union of entity primary keys is minimal superkey $\rightarrow$ is primary key
 - One-to-Many relationships. Primary key of the “Many” side is minimal superkey $\rightarrow$ is primary key
 - Many-to-one relationships. Primary key of the “Many” side is minimal superkey $\rightarrow$ is primary key
 - One-to-one relationships. Primary key of either one of the entity sets forms a minimal superkey $\rightarrow$ either can be primary key


---

## Weak Entity Sets

- Weak entity is an entity that cannot uniquely be identified by its attributes alone.
  - A weak entity must use a foreign key to uniquely identify its attributes
- Consider relation _Section_ (sec_id, year, building)
  - It is not unique without the course_id, primary key of courses
  - Otherwise require Course info in Section relation
- Consider how COMP 421 stores exam questions and answers
  - Not unique without a reference to onyen, primary key in roll table
- A weak entity's existence dependent on another entity
  - The other entity is the identifying entity
  - Attributes in weak entity called discriminator attributes
 

---

## Weak Entity Sets (Cont.)

- Weak entity set ER Diagram
  - Weak entity set in double rectangle.
  - Many-to-one from week to identifying entity set
  - Weak entity totally participates in owning entity

<figure style="border: 0">
  <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.14.ERDiagram.with.weak.entity.set.png" style="width:75%"/>
  <figcaption>Figure 6.14 E-R diagram with week entity set</figcaption>
</figure>

Note:

Remember to say what total participation is

{{HTTPS_FQDN}}/pages/worksheets/worksheet-06-01-weak-entities-car-insurance

{{HTTPS_FQDN}}/worksheets/worksheet-06-01-weak-entities-car-insurance

---

## Redundant Attributes

 - Suppose entity sets:
   - _student_, with attributes: _ID_, name, tot_cred, dept_name
   - _department,_ with attributes: dept_name, building, budget
 - Model fact that each student associated with department using relationship set <i>stud_dept</i>
  - depart_name in student may be replace with foreign key

<figure style="border: 0">
  <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Redundant.attribute.png" style="width:50%"/>
  <figcaption>Chapter 6.6 removing redundant attributes</figcaption>
</figure>

---

## E-R Diagram for a University Enterprise

<figure style="border: 0">
  <img src="{{HTTPS_FQDN}}/static/images/Chapter.06.Figure.6.15.ERdiagram.University.enterprise.png" style="width:50%"/>
  <figcaption>Figure 6.15 E-R diagram for a university enterprise</figcaption>
</figure>

---

## Epilogue

- The ER model, mapping cardinalities, and primary keys lead to chapter 7
- Please read over chapter 7 through 7.3.
  - It will definitely help with next lecture

